type TrangThai = {
  text: string;
  bgColor: string;
  textColor: string;
};

const trangThaiMap: Record<string, TrangThai> = {
  TT01: {
    text: "Ch·ªù ph√≤ng KHƒêT ti·∫øp nh·∫≠n x·ª≠ l√Ω",
    bgColor: "bg-yellow-100",
    textColor: "text-yellow-800",
  },
  TT02: {
    text: "Ph√≤ng KHƒêT ƒë√£ duy·ªát v√† ch·ªù BLƒê x√©t duy·ªát",
    bgColor: "bg-blue-100",
    textColor: "text-blue-800",
  },
  TT03: {
    text: "Ph√≤ng KHƒêT t·ª´ ch·ªëi v√† ch·ªù BLƒê quy·∫øt ƒë·ªãnh",
    bgColor: "bg-orange-100",
    textColor: "text-orange-800",
  },
  TT04: {
    text: "BLƒê t·ª´ ch·ªëi",
    bgColor: "bg-red-100",
    textColor: "text-red-800",
  },
  TT05: {
    text: "BLD ƒë√£ duy·ªát v√† ch·ªù ph√¢n c√¥ng ph√≤ng ban",
    bgColor: "bg-sky-100",
    textColor: "text-sky-800",
  },
  TT06: {
    text: "C√°c ph√≤ng ban ƒë·ªÅu t·ª´ ch·ªëi",
    bgColor: "bg-red-100",
    textColor: "text-red-800",
  },
  TT07: {
    text: "ƒêang ki·ªÉm nghi·ªám",
    bgColor: "bg-indigo-100",
    textColor: "text-indigo-800",
  },
  TT08: {
    text: "ƒê√£ ho√†n th√†nh ki·ªÉm nghi·ªám ch·ªù duy·ªát phi·∫øu ph√¢n t√≠ch",
    bgColor: "bg-teal-100",
    textColor: "text-teal-800",
  },
  TT09: {
    text: "ƒê√£ ho√†n th√†nh t·∫•t c·∫£",
    bgColor: "bg-green-100",
    textColor: "text-green-800",
  },
  TT10: {
    text: "ƒê√£ h·ªßy ki·ªÉm nghi·ªám",
    bgColor: "bg-gray-200",
    textColor: "text-gray-700",
  },
  TT11: {
    text: "ƒêang ki·ªÉm tra l·∫°i",
    bgColor: "bg-purple-100",
    textColor: "text-purple-800",
  },
  0: {
    text: "Kh ƒë√£ h·ªßy",
    bgColor: "bg-yellow-100",
    textColor: "text-yellow-800",
  },
  1: {
    text: "B·ªã t·ª´ ch·ªëi b·ªüi ph√≤ng ban",
    bgColor: "bg-purple-100",
    textColor: "text-purple-800",
  },
  2: {
    text: "Ch·ªù ph√≤ng ban duy·ªát",
    bgColor: "bg-green-100",
    textColor: "text-green-800",
  },
  3: {
    text: "ƒê√£ duy·ªát",
    bgColor: "bg-indigo-100",
    textColor: "text-indigo-800",
  },
};

const trangThaiMauMap: Record<string, TrangThai> = {
  1: {
    text: "Ch·ªù ph√¢n c√¥ng",
    bgColor: "bg-yellow-100",
    textColor: "text-yellow-800",
  },
  2: {
    text: "ƒêang ki·ªÉm nghi·ªám",
    bgColor: "bg-purple-100",
    textColor: "text-purple-800",
  },
  3: {
    text: "ƒê√£ b·ªã hu·ª∑ b·ªüi khoa chuy√™n m√¥n",
    bgColor: "bg-red-100",
    textColor: "text-red-800",
  },
  4: {
    text: "ƒê√£ b·ªã hu·ª∑ b·ªüi kh√°ch",
    bgColor: "bg-indigo-100",
    textColor: "text-indigo-800",
  },
  5: {
    text: "ƒê√£ ho√†n th√†nh",
    bgColor: "bg-green-100",
    textColor: "text-green-800",
  },
  6: {
    text: "ƒê√£ ph√¢n c√¥ng ch·ªù duy·ªát",
    bgColor: "bg-blue-100",
    textColor: "text-blue-800",
  },
  7: {
    text: "ƒê√£ ph√¢n c√¥ng n·ªôi b·ªô",
    bgColor: "bg-violet-100",
    textColor: "text-violet-800",
  },
  8: {
    text: "ƒê√£ ho√†n th√†nh ki·ªÉm nghi·ªám",
    bgColor: "bg-cyan-100",
    textColor: "text-cyan-800",
  },
};

const trangThaiChiTietPhieuDeXuatPhongBan: Record<string, TrangThai> = {
  0: {
    text: "Kh√°ch h√†ng ƒë√£ h·ªßy",
    bgColor: "bg-gray-100",
    textColor: "text-gray-800",
  },
  1: {
    text: "Ph√≤ng ban t·ª´ ch·ªëi ‚Äì ch·ªù BLƒê duy·ªát",
    bgColor: "bg-yellow-100",
    textColor: "text-yellow-800",
  },
  2: {
    text: "Ch·ªù ph√≤ng ban duy·ªát",
    bgColor: "bg-blue-100",
    textColor: "text-blue-800",
  },
  3: {
    text: "ƒê√£ duy·ªát",
    bgColor: "bg-purple-100",
    textColor: "text-purple-800",
  },
  4: {
    text: "Ph√≤ng ban t·ª´ ch·ªëi ‚Äì ch·ªù ph√¢n c√¥ng l·∫°i",
    bgColor: "bg-orange-100",
    textColor: "text-orange-800",
  },
  5: {
    text: "H·ªßy do kh√¥ng c√≥ ph√≤ng ban ti·∫øp nh·∫≠n",
    bgColor: "bg-red-100",
    textColor: "text-red-800",
  },
};

const trangThaiPhieuDeXuatPhongBan: Record<string, TrangThai> = {
  0: {
    text: "ƒê√£ H·ªßy",
    bgColor: "bg-yellow-100",
    textColor: "text-yellow-800",
  },
  1: {
    text: "Ch·ªù ph√≤ng ban duy·ªát",
    bgColor: "bg-blue-100",
    textColor: "text-blue-800",
  },
  2: {
    text: "ƒê√£ duy·ªát",
    bgColor: "bg-green-100",
    textColor: "text-green-800",
  },
};

const trangThaiPhanCongNoiBo: Record<string, TrangThai> = {
  false: {
    text: "ƒê√£ H·ªßy",
    bgColor: "bg-yellow-100",
    textColor: "text-yellow-800",
  },
  true: {
    text: "ƒê√£ ph√¢n c√¥ng",
    bgColor: "bg-green-100",
    textColor: "text-green-800",
  },
};

export const trangThaiPhanTichKetQua: Record<string, TrangThai> = {
  1: {
    text: "Ch·ªù l√£nh ƒë·∫°o ph√≤ng duy·ªát",
    bgColor: "bg-yellow-100",
    textColor: "text-yellow-800",
  },
  2: {
    text: "Ch·ªù BLƒê duy·ªát",
    bgColor: "bg-blue-100",
    textColor: "text-blue-800",
  },
  3: {
    text: "BLƒê ƒë√£ duy·ªát",
    bgColor: "bg-green-100",
    textColor: "text-green-800",
  },
  4: {
    text: "BLƒê ƒë√£ t·ª´ ch·ªëi",
    bgColor: "bg-red-100",
    textColor: "text-red-800",
  },
  5: {
    text: "LDP t·ª´ ch·ªëi",
    bgColor: "bg-purple-100",
    textColor: "text-purple-800",
  },
};

const trangThaiDuTru: Record<string, TrangThai> = {
  0: {
    text: "ƒê√£ h·ªßy",
    bgColor: "bg-red-100",
    textColor: "text-red-800",
  },
  1: {
    text: "Ch·ªù duy·ªát",
    bgColor: "bg-yellow-100",
    textColor: "text-yellow-800",
  },
  2: {
    text: "ƒê√£ Duy·ªát",
    bgColor: "bg-green-100",
    textColor: "text-green-800",
  },
};

export const getStatusClass = (status: any) => {
  switch (status) {
    case "Ho√†n th√†nh":
      return "bg-green-100 text-green-800";
    case "ƒêang ki·ªÉm tra":
      return "bg-blue-100 text-blue-800";
    case "ƒêang x·ª≠ l√Ω":
      return "bg-yellow-100 text-yellow-800";
    default:
      return "bg-gray-100 text-gray-800";
  }
};

export function renderTrangThai(trangThaiId: string) {
  const trangThai = trangThaiMap[trangThaiId] || {
    text: "Kh√¥ng x√°c ƒë·ªãnh",
    bgColor: "bg-gray-100",
    textColor: "text-gray-800",
  };

  return (
    <span
      className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${trangThai.bgColor} ${trangThai.textColor}`}
    >
      {trangThai.text}
    </span>
  );
}

export function renderTrangThaiMau(trangThaiId: string) {
  const trangThai = trangThaiMauMap[trangThaiId] || {
    text: "Kh√¥ng x√°c ƒë·ªãnh",
    bgColor: "bg-gray-100",
    textColor: "text-gray-800",
  };

  return (
    <span
      className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${trangThai.bgColor} ${trangThai.textColor}`}
    >
      {trangThai.text}
    </span>
  );
}

export function renderTrangThaiChiTietPhieuDeXuatPhongBan(trangThaiId: string) {
  const trangThai = trangThaiChiTietPhieuDeXuatPhongBan[trangThaiId] || {
    text: "Kh√¥ng x√°c ƒë·ªãnh",
    bgColor: "bg-gray-100",
    textColor: "text-gray-800",
  };

  return (
    <span
      className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${trangThai.bgColor} ${trangThai.textColor}`}
    >
      {trangThai.text}
    </span>
  );
}

export function renderTrangThaiPhieuDeXuatPhongBan(trangThaiId: string) {
  const trangThai = trangThaiPhieuDeXuatPhongBan[trangThaiId] || {
    text: "Kh√¥ng x√°c ƒë·ªãnh",
    bgColor: "bg-gray-100",
    textColor: "text-gray-800",
  };

  return (
    <span
      className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${trangThai.bgColor} ${trangThai.textColor}`}
    >
      {trangThai.text}
    </span>
  );
}

export function renderTrangThaiPhanCongNoiBo(trangThaiId: string) {
  const trangThai = trangThaiPhanCongNoiBo[trangThaiId] || {
    text: "Kh√¥ng x√°c ƒë·ªãnh",
    bgColor: "bg-gray-100",
    textColor: "text-gray-800",
  };

  return (
    <span
      className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${trangThai.bgColor} ${trangThai.textColor}`}
    >
      {trangThai.text}
    </span>
  );
}

export function renderTrangThaiDuTru(trangThaiId: string) {
  const trangThai = trangThaiDuTru[trangThaiId] || {
    text: "Kh√¥ng x√°c ƒë·ªãnh",
    bgColor: "bg-gray-100",
    textColor: "text-gray-800",
  };

  return (
    <span
      className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${trangThai.bgColor} ${trangThai.textColor}`}
    >
      {trangThai.text}
    </span>
  );
}

export function renderTrangThaiPhanTichKetQua(trangThaiId: string) {
  const trangThai = trangThaiPhanTichKetQua[trangThaiId] || {
    text: "Kh√¥ng x√°c ƒë·ªãnh",
    bgColor: "bg-gray-100",
    textColor: "text-gray-800",
  };

  return (
    <span
      className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${trangThai.bgColor} ${trangThai.textColor}`}
    >
      {trangThai.text}
    </span>
  );
}

export const formatDate = (dateString: any) => {
  const date = new Date(dateString);
  return date.toLocaleString("vi-VN", {
    day: "2-digit",
    month: "2-digit",
    year: "numeric",
    hour: "2-digit",
    minute: "2-digit",
  });
};

export const formatDateNotTime = (dateString: any) => {
  const date = new Date(dateString).toLocaleDateString("vi-VN");
  return date;
};

export const formatDateNotTime2 = (date?: string | Date) => {
  if (!date) return undefined;
  const d = new Date(date);
  return d.toLocaleDateString("sv-SE");
};

export const getQualityClass = (quality: any) => {
  switch (quality) {
    case "ƒê·∫°t":
      return "bg-green-100 text-green-800";
    case "Kh√¥ng ƒë·∫°t":
      return "bg-red-100 text-red-800";
    case "C·∫ßn ki·ªÉm tra l·∫°i":
      return "bg-yellow-100 text-yellow-800";
    case "Ch∆∞a x√°c ƒë·ªãnh":
      return "bg-gray-100 text-gray-800";
    default:
      return "bg-gray-100 text-gray-800";
  }
};

export const getStatusIcon = (status: any) => {
  switch (status) {
    case "Ho√†n th√†nh":
      return "‚úÖ";
    case "ƒêang ki·ªÉm tra":
      return "üîç";
    case "ƒêang x·ª≠ l√Ω":
      return "‚è≥";
    default:
      return "üìã";
  }
};
